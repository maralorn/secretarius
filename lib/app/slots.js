/*** Generated by streamline 0.4.6 (callbacks) - DO NOT EDIT ***/ var __rt=require('streamline/lib/callbacks/runtime').runtime(__filename),__func=__rt.__func,__cb=__rt.__cb; (function() {
  var WindowSlot, ui, _this = this, __hasProp = {

  }.hasOwnProperty, __extends = function(child, parent) {
    for (var key in parent) { if (__hasProp.call(parent, key)) { child[key] = parent[key]; }; }; function ctor() { this.constructor = child; }; ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  ui = require("./ui");

  exports.WindowSlot = WindowSlot = (function(_super) {

    __extends(WindowSlot, _super);

    function WindowSlot(_, viewname) { var $clock, clock, dish, emitter, labels, menu, runclock, _i, _j, _len, _len1, _this, __this = this; var __frame = { name: "WindowSlot", line: 13 }; return __func(_, this, arguments, WindowSlot, 0, __frame, function __$WindowSlot() { _this = __this;


        __this.setView = function(viewname) {
          return WindowSlot.prototype.setView.apply(_this, arguments); };

        console.log("a");
        return model.inbox.get(__cb(_, __frame, 7, 6, function __$WindowSlot() {
          console.log("a");
          menu = ["","inbox","projects",];
          labels = { };
          _i = 0; _len = menu.length; var __6 = false; return (function ___(__break) { var __more; var __loop = __cb(_, __frame, 0, 0, function __$WindowSlot() { __more = false; if (__6) { _i++; } else { __6 = true; } ; var __5 = (_i < _len); if (__5) {
                dish = menu[_i];
                return ui.label(__cb(_, __frame, 13, 23, function ___(__0, __2) { labels[dish] = __2; while (__more) { __loop(); }; __more = true; }, true), dish); } else { __break(); } ; }); do { __loop(); } while (__more); __more = true; })(function __$WindowSlot() {










            return (function __1(_) { var _j, _len1, _results; _results = []; _j = 0; _len1 = menu.length; var __3 = false; return (function ___(__break) { var __more; var __loop = __cb(_, __frame, 0, 0, function __$__1() { __more = false; if (__3) { _j++; } else { __3 = true; } ; var __2 = (_j < _len1); if (__2) { dish = menu[_j]; return labels[dish](__cb(_, __frame, 5, 26, function ___(__0, __1) { _results.push(__1); while (__more) { __loop(); }; __more = true; }, true)); } else { __break(); } ; }); do { __loop(); } while (__more); __more = true; })(function __$__1() { return _(null, _results); }); })(__cb(_, __frame, 24, 14, function ___(__0, __3) { $("body").html(require("./template/body")({ menu: __3 }));

              new ui.AsapListsList($("#menu"));
              for (_j = 0, _len1 = menu.length; (_j < _len1); _j++) {
                dish = menu[_j];
                emitter = new ui.Emitter($((("#menu > button:contains('" + labels[dish]) + "')")));
                emitter.setViewName(dish); };

              $clock = $("#clock");
              $clock.hide();
              clock = function() {
                runclock();
                $(".reltime").each(function() {
                  var node;
                  node = $(this);
                  return node.html(new Date(node.attr("x-time")).toRelativeTime({
                    nowThreshold: 1000 })); });


                try {
                  $clock.show();
                  return $clock.html(((("" + (new Date().toLocaleString())) + " Inbox:") + model.inbox.values.size));
                } catch (err) {
                  return $clock.hide(); }; };


              (runclock = function() {
                return setTimeout(clock, (1000 - ((new Date().getTime)() % 1000)));
              })();
              WindowSlot.__super__.constructor.call(__this, $("#content"), $("#header > h1").first());
              WindowSlot.__super__.setView.call(__this, viewname);
              new ui.DropArea($("#header > h1").first(), __this.setView); _(); }, true)); }); }, true)); }); };


    WindowSlot.prototype.setView = function(viewname) {
      return window.location.href = ((("http://" + window.location.host) + "/") + viewname); };


    WindowSlot.prototype.setTitle = function(title) {
      WindowSlot.__super__.setTitle.apply(this, arguments);
      return document.title = (("" + title) + " - Secretarius"); };


    WindowSlot.prototype.close = function() {
      window.open("", "_self", "");
      return window.close(); };


    return WindowSlot;

  })(ui.Slot);

















































}).call(this);