/*** Generated by streamline 0.4.6 (callbacks) - DO NOT EDIT ***/ var __rt=require('streamline/lib/callbacks/runtime').runtime(__filename),__func=__rt.__func; (function() {
  var InboxView, ui, _this = this, __hasProp = {

  }.hasOwnProperty, __extends = function(child, parent) {
    for (var key in parent) { if (__hasProp.call(parent, key)) { child[key] = parent[key]; }; }; function ctor() { this.constructor = child; }; ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  ui = require("./ui");

  InboxView = (function(_super) {

    __extends(InboxView, _super);

    InboxView.registerView(/^inbox$/, InboxView, function __1(_) { var __frame = { name: "__1", line: 13 }; return __func(_, this, arguments, __1, 0, __frame, function __$__1() {
        return _(null, "Inbox"); }); });


    function InboxView(slot) {
      var innerFlip, outerFlip, _this = this;

      this.slot = slot;
      this.draw = function(values) {
        return InboxView.prototype.draw.apply(_this, arguments); };

      this.size = this.first = null;
      this.context = this.slot.getContentNode();
      this.slot.setContent(require("./template/inbox")());
      this.innerslot = new ui.Slot($(".inboxinfo", this.slot.getContentNode()).first(), $("h1", this.slot.getContentNode()).first());
      model.inbox.onChanged(this.draw);
      model.inbox.get(function(err, values) {
        if ((err == null)) {
          return _this.draw(values); } ; });


      innerFlip = new ui.Flippable($(".newasap", this.context), $(".newproject", this.context), 0);
      outerFlip = new ui.Flippable($(".front", this.context), $(".back", this.context), 500);
      outerFlip.addToggler($(".front > button", this.context));
      outerFlip.addToggler($(".back > button", this.context));
      $("button[name=asap]", this.context).click(innerFlip.showFront);
      $("button[name=project]", this.context).click(innerFlip.showBack);
      this.asapCreator = new ui.AsapCreator($(".newasap", this.context));
      this.projectCreator = new ui.ProjectCreator($(".newproject", this.context)); };


    InboxView.prototype["delete"] = function() {
      return model.inbox.removeCb("changed", this.draw); };


    InboxView.prototype.draw = function(values) {
      if ((this.size !== values.size)) {
        this.slot.setTitle((("Inbox (" + (this.size = values.size)) + ")")); } ;

      if ((this.first !== values.first)) {
        this.first = values.first;
        this.asapCreator.setReference(this.first);
        this.projectCreator.setReference(this.first);
        if ((this.first != null)) {
          return this.innerslot.setView(((("" + this.first.type) + ":") + this.first.id)); }
         else {
          return this.innerslot.clear(); } ; } ; };




    return InboxView;

  })(ui.View);

}).call(this);