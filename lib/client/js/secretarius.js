/*** Generated by streamline 0.4.7 (callbacks) - DO NOT EDIT ***/
var __rt=require('streamline/lib/callbacks/runtime').runtime(__filename),__func=__rt.__func,__cb=__rt.__cb,__trap=__rt.__trap,__apply=__rt.__apply,__construct=__rt.__construct;
(function main(_) {
  var __this = this;
  var __frame = {
    name: "main",
    line: 1
  };
  return __func(_, this, arguments, main, 0, __frame, function __$main() {
    return (function __1(_) {
      var AsapView, InboxView, InfoView, KOModelStorage, MainView, NewWindowSlotGenerator, NoteView, Reference, Slot, SlotGenerator, View, WindowSlot, WindowSlotGenerator, defaultTo, icon, id2label, id2viewname, info2label, info2viewname, ko, label, model, observableList, poll, references, sec, store, truncate, util, viewname2id, viewname2info, win, _ref, _ref1, _ref2, _ref3, _ref4, __indexOf, __bind, __hasProp, __extends;
      __indexOf = ([].indexOf || function(item) {
        for (var i = 0, l = this.length; (i < l); i++) {
          if (((i in this) && (this[i] === item))) {
            return i
          };
        };
        return -1;
      });
      __bind = function(fn, me) {
        return function() {
          return fn.apply(me, arguments);
        };
      };
      __hasProp = {
      }.hasOwnProperty;
      __extends = function(child, parent) {
        for (var key in parent) {
          if (__hasProp.call(parent, key)) {
            child[key] = parent[key];
          };
        };
        function ctor() {
          this.constructor = child;
        };
        ctor.prototype = parent.prototype;
        child.prototype = new ctor();
        child.__super__ = parent.prototype;
        return child;
      };
      require("./vendor/jquery");
      require("./vendor/jquery.autosize");
      require("./vendor/date.extensions");
      ko = require("knockout");
      ko.mapping = require("./vendor/knockout.mapping");
      sec = require("libsecretarius");
      util = sec.util;
      model = sec();
      defaultTo = function(obj, defaults) {
        var key, value, _results;
        _results = [];
        for (key in defaults) {
          value = defaults[key];
          if ((obj[key] == null)) {
            _results.push(obj[key] = value);
          }
           else {
            _results.push(void 0);
          }
        ;
        };
        return _results;
      };
      viewname2id = function(viewname) {
        var _ref;
        return (((_ref = /^\w*\/(.*)$/.exec(viewname)) != null) ? _ref[1] : void 0);
      };
      id2viewname = function id2viewname__1(_, id) {
        var __frame = {
          name: "id2viewname__1",
          line: 45
        };
        return __func(_, this, arguments, id2viewname__1, 0, __frame, function __$id2viewname__1() {
          return model.cache.getInformation(__cb(_, __frame, 1, 25, function ___(__0, __2) {
            var __1 = info2viewname(__2);
            return _(null, __1);
          }, true), id);
        });
      };
      viewname2info = function viewname2info__2(_, viewname) {
        var id;
        var __frame = {
          name: "viewname2info__2",
          line: 49
        };
        return __func(_, this, arguments, viewname2info__2, 0, __frame, function __$viewname2info__2() {
          return (function __$viewname2info__2(__then) {
            if (((id = viewname2id(viewname)) != null)) {
              return model.cache.getInformation(__cb(_, __frame, 4, 13, _, true), id);
            }
             else {
              return _(new Error(("No Infoview Name: " + viewname)));
            }
          ;
          })(_);
        });
      };
      info2label = function info2label__3(_, info) {
        var __frame = {
          name: "info2label__3",
          line: 59
        };
        return __func(_, this, arguments, info2label__3, 0, __frame, function __$info2label__3() {
          return label(__cb(_, __frame, 1, 11, _, true), info2viewname(info));
        });
      };
      info2viewname = function(info) {
        return ((("" + info.type) + "/") + info.id);
      };
      id2label = function id2label__4(_, id) {
        var __frame = {
          name: "id2label__4",
          line: 67
        };
        return __func(_, this, arguments, id2label__4, 0, __frame, function __$id2label__4() {
          return id2viewname(__cb(_, __frame, 1, 4, function __$id2label__4() {
            return label(__cb(_, __frame, 2, 11, _, true), viewname);
          }, true), id);
        });
      };
      label = function label__5(_, viewname) {
        var __frame = {
          name: "label__5",
          line: 72
        };
        return __func(_, this, arguments, label__5, 0, __frame, function __$label__5() {
          return View.getLabel(__cb(_, __frame, 1, 11, _, true), viewname);
        });
      };
      icon = function(name) {
        return (("<i class='icon-" + name) + "' />");
      };
      return (function __6(_) {
        function KOModelStorage() {
          this.models = {
          };
        };
        KOModelStorage.prototype.getInfo = function KOModelStorage_prototype_getInfo__1(_, id) {
          var __this = this;
          var __frame = {
            name: "KOModelStorage_prototype_getInfo__1",
            line: 85
          };
          return __func(_, this, arguments, KOModelStorage_prototype_getInfo__1, 0, __frame, function __$KOModelStorage_prototype_getInfo__1() {
            return (function __$KOModelStorage_prototype_getInfo__1(__then) {
              if (!((id in __this.models))) {
                return model.cache.getInformation(__cb(_, __frame, 2, 50, function ___(__0, __1) {
                  return __this.createInfoModel(__cb(_, __frame, 2, 26, function ___(__0, __2) {
                    __this.models[id] = __2;
                    __then();
                  }, true), __1);
                }, true), id);
              }
               else {
                __then();
              }
            ;
            })(function __$KOModelStorage_prototype_getInfo__1() {
              return _(null, __this.models[id]);
            });
          });
        };
        KOModelStorage.prototype.getList = function KOModelStorage_prototype_getList__2(_, name) {
          var __this = this;
          var __frame = {
            name: "KOModelStorage_prototype_getList__2",
            line: 92
          };
          return __func(_, this, arguments, KOModelStorage_prototype_getList__2, 0, __frame, function __$KOModelStorage_prototype_getList__2() {
            return (function __$KOModelStorage_prototype_getList__2(__then) {
              if (!((name in __this.models))) {
                return __this.createListModel(__cb(_, __frame, 2, 28, function ___(__0, __1) {
                  __this.models[name] = __1;
                  __then();
                }, true), model[name]);
              }
               else {
                __then();
              }
            ;
            })(function __$KOModelStorage_prototype_getList__2() {
              return _(null, __this.models[name]);
            });
          });
        };
        KOModelStorage.prototype.getObject = function KOModelStorage_prototype_getObject__3(_, name) {
          var __this = this;
          var __frame = {
            name: "KOModelStorage_prototype_getObject__3",
            line: 99
          };
          return __func(_, this, arguments, KOModelStorage_prototype_getObject__3, 0, __frame, function __$KOModelStorage_prototype_getObject__3() {
            return (function __$KOModelStorage_prototype_getObject__3(__then) {
              if (!((name in __this.models))) {
                return __this.createObjectModel(__cb(_, __frame, 2, 28, function ___(__0, __1) {
                  __this.models[name] = __1;
                  __then();
                }, true), model[name]);
              }
               else {
                __then();
              }
            ;
            })(function __$KOModelStorage_prototype_getObject__3() {
              return _(null, __this.models[name]);
            });
          });
        };
        KOModelStorage.prototype.createObjectModel = util.singlify(function __4(_, obj) {
          var koModel;
          var __frame = {
            name: "__4",
            line: 106
          };
          return __func(_, this, arguments, __4, 0, __frame, function __$__4() {
            return obj.get(__cb(_, __frame, 3, 34, function ___(__0, __1) {
              koModel = ko.mapping.fromJS(__1);
              koModel.model = obj;
              obj.onChanged(function(data) {
                return ko.mapping.fromJS(data, koModel);
              });
              return _(null, koModel);
            }, true));
          });
        });
        KOModelStorage.prototype.createListModel = util.singlify(function __5(_, cls) {
          var list;
          var __frame = {
            name: "__5",
            line: 117
          };
          return __func(_, this, arguments, __5, 0, __frame, function __$__5() {
            return cls.getAllIDs(__cb(_, __frame, 3, 32, function ___(__0, __1) {
              list = ko.observableArray(__1);
              cls.onChanged(list);
              return _(null, list);
            }, true));
          });
        });
        KOModelStorage.prototype.createInfoModel = util.singlify(function __6(_, model) {
          var koModel;
          var __frame = {
            name: "__6",
            line: 125
          };
          return __func(_, this, arguments, __6, 0, __frame, function __$__6() {
            koModel = ko.mapping.fromJS(model);
            koModel.model = model;
            model.onChanged(function() {
              return ko.mapping.fromJS(model, koModel);
            });
            return _(null, koModel);
          });
        });
        return _(null, KOModelStorage);
      })(__cb(_, __frame, 137, 19, function ___(__0, __11) {
        KOModelStorage = __11;
        store = new KOModelStorage;
        observableList = function(observedArray, creator) {
          var elements, getElement, list, update;
          elements = {
          };
          list = ko.observableArray([]);
          getElement = function getElement__1(_, id) {
            var __frame = {
              name: "getElement__1",
              line: 147
            };
            return __func(_, this, arguments, getElement__1, 0, __frame, function __$getElement__1() {
              return (function __$getElement__1(__then) {
                if (!((id in elements))) {
                  return creator(__cb(_, __frame, 2, 23, function ___(__0, __1) {
                    elements[id] = __1;
                    __then();
                  }, true), id);
                }
                 else {
                  __then();
                }
              ;
              })(function __$getElement__1() {
                return _(null, elements[id]);
              });
            });
          };
          observedArray.subscribe(update = function update__2(arr, _) {
            var id, _ref;
            var __frame = {
              name: "update__2",
              line: 153
            };
            return __func(_, this, arguments, update__2, 1, __frame, function __$update__2() {
              for (id in elements) {
                if (_ref = !id, (__indexOf.call(arr, _ref) >= 0)) {
                  delete elements[id];
                }
              ;
              };
              return (function __1(_) {
                var _i, _len, _results;
                _results = [];
                _i = 0;
                _len = arr.length;
                var __3 = false;
                return (function ___(__break) {
                  var __more;
                  var __loop = __cb(_, __frame, 0, 0, function __$__1() {
                    __more = false;
                    if (__3) {
                      _i++;
                    }
                     else {
                      __3 = true;
                    }
                  ;
                    var __2 = (_i < _len);
                    if (__2) {
                      id = arr[_i];
                      return getElement(__cb(_, __frame, 6, 24, function ___(__0, __1) {
                        _results.push(__1);
                        while (__more) {
                          __loop();
                        };
                        __more = true;
                      }, true), id);
                    }
                     else {
                      __break();
                    }
                  ;
                  });
                  do {
                    __loop();
                  } while (__more);
                  __more = true;
                })(function __$__1() {
                  return _(null, _results);
                });
              })(__cb(_, __frame, 17, 18, function ___(__0, __3) {
                var __2 = list(__3);
                return _(null, __2);
              }, true));
            });
          });
          update(observedArray(), util.dummyCB);
          return list;
        };
        return (function __7(_) {
          var _views;
          function View() {
          
          };
          _views = [];
          View.registerView = function(regex, cls, label) {
            return _views.push({
              regex: regex,
              cls: cls,
              label: label
            });
          };
          View.getLabel = function View_getLabel__1(_, viewname) {
            var params, row, _ref, __this = this;
            var __frame = {
              name: "View_getLabel__1",
              line: 191
            };
            return __func(_, this, arguments, View_getLabel__1, 0, __frame, function __$View_getLabel__1() {
              _ref = __this._find(viewname), row = _ref[0], params = _ref[1];
              return (function __$View_getLabel__1(__then) {
                if (((((row != null) ? row.label : void 0)) != null)) {
                  return row.label(__cb(_, __frame, 5, 15, _, true), params);
                }
                 else {
                  return _(null, viewname);
                }
              ;
              })(_);
            });
          };
          View.create = function View_create__2(_, viewname, slot) {
            var params, row, _ref, __this = this;
            var __frame = {
              name: "View_create__2",
              line: 202
            };
            return __func(_, this, arguments, View_create__2, 0, __frame, function __$View_create__2() {
              _ref = __this._find(viewname), row = _ref[0], params = _ref[1];
              return (function __$View_create__2(__then) {
                if ((row != null)) {
                  return __construct(row.cls, 0)(__cb(_, __frame, NaN, NaN, _, true), slot, params);
                }
                 else {
                  __then();
                }
              ;
              })(_);
            });
          };
          View._find = function(viewname) {
            var params, row, _i, _len;
            for (_i = 0, _len = _views.length; (_i < _len); _i++) {
              row = _views[_i];
              params = row.regex.exec(viewname);
              if ((params != null)) {
                return [row,params,];
              }
            ;
            };
            return [null,null,];
          };
          View.test = function(viewname) {
            return (this._find(viewname)[0] != null);
          };
          return _(null, View);
        })(__cb(_, __frame, 229, 9, function ___(__0, __12) {
          View = __12;
          return (function __8(_) {
            function Slot(_) {
              var __this = this;
              var __frame = {
                name: "Slot",
                line: 233
              };
              return __func(_, this, arguments, Slot, 0, __frame, function __$Slot() {
                __this.setView = __bind(__this.setView, __this);
                __this.view = ko.observable(null);
                __this.viewname = ko.observable();
                _();
              });
            };
            Slot.prototype.setView = function(viewname) {
              var _this = this;
              if (View.test(viewname)) {
                this.viewname(viewname);
                return (function __1(_) {
                  var __frame = {
                    name: "__1",
                    line: 243
                  };
                  return __func(_, this, arguments, __1, 0, __frame, function __$__1() {
                    return View.create(__cb(_, __frame, 1, 28, function ___(__0, __2) {
                      var __1 = _this.view(__2);
                      return _(null, __1);
                    }, true), viewname, _this);
                  });
                })(util.dummyCB);
              }
            ;
            };
            Slot.prototype.clear = function() {
              return this.view(null);
            };
            return _(null, Slot);
          })(__cb(_, __frame, 254, 9, function ___(__0, __13) {
            Slot = __13;
            return (function __9(_) {
              var _default;
              function SlotGenerator() {
              
              };
              _default = null;
              SlotGenerator.setDefault = function(generator) {
                return _default = generator;
              };
              SlotGenerator.getDefault = function() {
                return _default;
              };
              return _(null, SlotGenerator);
            })(__cb(_, __frame, 273, 18, function ___(__0, __14) {
              SlotGenerator = __14;
              WindowSlotGenerator = (function(_super) {
                __extends(WindowSlotGenerator, _super);
                function WindowSlotGenerator() {
                  _ref = WindowSlotGenerator.__super__.constructor.apply(this, arguments);
                  return _ref;
                };
                WindowSlotGenerator.prototype.show = function(viewname) {
                  return win.setView(viewname);
                };
                WindowSlotGenerator.setDefault(new WindowSlotGenerator);
                return WindowSlotGenerator;
              })(SlotGenerator);
              NewWindowSlotGenerator = (function(_super) {
                __extends(NewWindowSlotGenerator, _super);
                function NewWindowSlotGenerator() {
                  _ref1 = NewWindowSlotGenerator.__super__.constructor.apply(this, arguments);
                  return _ref1;
                };
                NewWindowSlotGenerator.prototype.show = function(viewname) {
                  return window.open(((("" + window.location.origin) + "#") + viewname), "", "toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=no,copyhistory=no");
                };
                return NewWindowSlotGenerator;
              })(SlotGenerator);
              poll = function(func, interval) {
                var clock, pollobj, stopped, _this = this;
                if ((interval == null)) {
                  interval = 1000;
                }
              ;
                stopped = false;
                (clock = function() {
                  setTimeout((function() {
                    if (!stopped) {
                      return clock(util.dummyCB);
                    }
                  ;
                  }), (interval - ((new Date().getTime() % interval))));
                  return func();
                })(util.dummyCB);
                return pollobj = {
                  stop: function() {
                    return stopped = true;
                  }
                };
              };
              truncate = function(str, length) {
                if ((length == null)) {
                  length = 20;
                }
              ;
                if ((str.length > (length - 1))) {
                  return (("" + str.slice(0, (length - 2))) + "…");
                }
                 else {
                  return str;
                }
              ;
              };
              WindowSlot = (function(_super) {
                var menu;
                __extends(WindowSlot, _super);
                menu = ko.observableArray(["","inbox","projects",]);
                function WindowSlot(_) {
                  var inbox, __this = this, __arguments = arguments;
                  var __frame = {
                    name: "WindowSlot",
                    line: 351
                  };
                  return __func(_, this, arguments, WindowSlot, 0, __frame, function __$WindowSlot() {
                    __this.deleteMsg = __bind(__this.deleteMsg, __this);
                    __this.setView = __bind(__this.setView, __this);
                    return __apply(__cb(_, __frame, 5, 6, function __$WindowSlot() {
                      __this.msg = ko.observableArray();
                      __this.menu = observableList(menu, function __1(_, viewname) {
                        var __frame = {
                          name: "__1",
                          line: 358
                        };
                        return __func(_, this, arguments, __1, 0, __frame, function __$__1() {
                          return label(__cb(_, __frame, 3, 17, function ___(__0, __2) {
                            var __1 = {
                              url: viewname,
                              label: __2
                            };
                            return _(null, __1);
                          }, true), viewname);
                        });
                      });
                      __this.showlists = ko.observable(false);
                      return store.getList(__cb(_, __frame, 14, 38, function ___(__0, __3) {
                        __this.asaplists = observableList(__3, function __2(_, id) {
                          var __frame = {
                            name: "__2",
                            line: 365
                          };
                          return __func(_, this, arguments, __2, 0, __frame, function __$__2() {
                            return store.getInfo(__cb(_, __frame, 3, 17, function ___(__0, __2) {
                              var __1 = {
                                url: ("asaplist/" + id),
                                label: __2.name
                              };
                              return _(null, __1);
                            }, true), id);
                          });
                        });
                        return store.getObject(__cb(_, __frame, 20, 14, function ___(__0, __4) {
                          inbox = __4;
                          __this.clock = ko.computed(function() {
                            return ((("" + (icon("inbox"))) + " ") + (inbox.size()));
                          });
                          _();
                        }, true), "inbox");
                      }, true), "AsapList");
                    }, true), WindowSlot.__super__.constructor, __this, __arguments, 0);
                  });
                };
                WindowSlot.prototype.setView = function(viewname) {
                  if (View.test(viewname)) {
                    return WindowSlot.__super__.setView.call(this, window.location.hash = viewname);
                  }
                ;
                };
                WindowSlot.prototype.showMessage = function(msg, timeout) {
                  var obs, _this = this;
                  if ((timeout == null)) {
                    timeout = 5000;
                  }
                ;
                  this.msg.push(obs = ko.observable(msg));
                  if ((timeout > 0)) {
                    setTimeout((function() {
                      return _this.msg.shift();
                    }), timeout);
                  }
                ;
                  return obs;
                };
                WindowSlot.prototype.deleteMsg = function(msg) {
                  return this.msg.remove(function(elem) {
                    return (elem() === msg);
                  });
                };
                WindowSlot.prototype.relTime = function(time) {
                  return new Date(time).toRelativeTime({
                    nowThreshold: 1000
                  });
                };
                return WindowSlot;
              })(Slot);
              InboxView = (function(_super) {
                __extends(InboxView, _super);
                InboxView.registerView(/^inbox$/, InboxView, function __1(_) {
                  var __frame = {
                    name: "__1",
                    line: 754
                  };
                  return __func(_, this, arguments, __1, 0, __frame, function __$__1() {
                    return _(null, icon("inbox"));
                  });
                });
                function InboxView(_, slot) {
                  var inbox, setView, update, _this, __this = this;
                  var __frame = {
                    name: "InboxView",
                    line: 758
                  };
                  return __func(_, this, arguments, InboxView, 0, __frame, function __$InboxView() {
                    _this = __this;
                    __this.slot = slot;
                    return store.getObject(__cb(_, __frame, 5, 14, function ___(__0, __2) {
                      inbox = __2;
                      __this.template = "inbox";
                      __this.title = ko.computed(function() {
                        return (("Inbox (" + (inbox.size())) + ")");
                      });
                      __this.icon = "inbox";
                      return __construct(Slot, 0)(__cb(_, __frame, NaN, NaN, function ___(__0, __3) {
                        __this.innerSlot = __3;
                        setView = __this.innerSlot.setView;
                        __this.innerSlot.setView = (function() {
                        
                        });
                        __this.full = ko.computed(function() {
                          return util.UUID_REG.test(inbox.first());
                        });
                        update = function update__1(id, _) {
                          var __frame = {
                            name: "update__1",
                            line: 775
                          };
                          return __func(_, this, arguments, update__1, 1, __frame, function __$update__1() {
                            return id2viewname(__cb(_, __frame, 1, 23, function ___(__0, __2) {
                              var __1 = setView(__2);
                              return _(null, __1);
                            }, true), id);
                          });
                        };
                        inbox.first.subscribe(update);
                        update(inbox.first());
                        _();
                      }, true));
                    }, true), "inbox");
                  });
                };
                return InboxView;
              })(View);
              InfoView = (function(_super) {
                __extends(InfoView, _super);
                function InfoView(_, slot, match) {
                  var _this, __this = this;
                  var __frame = {
                    name: "InfoView",
                    line: 789
                  };
                  return __func(_, this, arguments, InfoView, 0, __frame, function __$InfoView() {
                    _this = __this;
                    __this.slot = slot;
                    __this.setStatus = __bind(__this.setStatus, __this);
                    __this.addNote = __bind(__this.addNote, __this);
                    __this.removeReference = __bind(__this.removeReference, __this);
                    __this.addReference = __bind(__this.addReference, __this);
                    __this.id = match[1];
                    return store.getInfo(__cb(_, __frame, 9, 18, function ___(__0, __2) {
                      __this.info = __2;
                      __this.type = __this.info.model.type;
                      __this.template = "info";
                      __this.icon = "info-sign";
                      return __this.init(__cb(_, __frame, 13, 6, function __$InfoView() {
                        __this.states = [{
                          state: "delete",
                          label: "&#xf00d;",
                          tooltip: "Delete",
                          active: ko.observable(false)
                        },{
                          state: "maybe",
                          label: "&#xf059;",
                          tooltip: "Maybe another time",
                          active: ko.computed(function() {
                            return (_this.info.status() === "maybe");
                          })
                        },{
                          state: "default",
                          label: "&#xf058;",
                          tooltip: "Normal",
                          active: ko.computed(function() {
                            return (_this.info.status() === "default");
                          })
                        },{
                          state: "inbox",
                          label: "&#xf01c;",
                          tooltip: "Put in Inbox",
                          active: ko.computed(function() {
                            return (_this.info.status() === "inbox");
                          })
                        },{
                          state: "urgent",
                          label: "&#xf0a2;",
                          tooltip: "This is urgent!",
                          active: ko.computed(function() {
                            return (_this.info.status() === "urgent");
                          })
                        },];
                        __this.references = observableList(__this.info.references, function __1(_, id) {
                          var __frame = {
                            name: "__1",
                            line: 839
                          };
                          return __func(_, this, arguments, __1, 0, __frame, function __$__1() {
                            return model.cache.getInformation(__cb(_, __frame, 1, 30, function ___(__0, __2) {
                              return __construct(references[__2.type], 0)(__cb(_, __frame, NaN, NaN, _, true), id);
                            }, true), id);
                          });
                        });
                        _();
                      }, true));
                    }, true), __this.id);
                  });
                };
                InfoView.prototype.addReference = function(viewname) {
                  var _this = this;
                  return (function __1(_) {
                    var __frame = {
                      name: "__1",
                      line: 847
                    };
                    return __func(_, this, arguments, __1, 0, __frame, function __$__1() {
                      return viewname2info(__cb(_, __frame, 1, 48, function ___(__0, __2) {
                        return _this.info.model.addReference(__cb(_, __frame, 1, 15, _, true), __2);
                      }, true), viewname);
                    });
                  })(util.dummyCB);
                };
                InfoView.prototype.removeReference = function(reference) {
                  return this.info.model.removeReference(util.dummyCB, reference.info.model);
                };
                InfoView.prototype.addNote = function() {
                  var _this = this;
                  return util.doAsync(function __1(_) {
                    var note;
                    var __frame = {
                      name: "__1",
                      line: 859
                    };
                    return __func(_, this, arguments, __1, 0, __frame, function __$__1() {
                      note = new model.Note;
                      return note.create(__cb(_, __frame, 4, 8, function __$__1() {
                        console.log(note.id);
                        return _this.info.model.addReference(__cb(_, __frame, 6, 15, _, true), note);
                      }, true), "", "default");
                    });
                  });
                };
                InfoView.prototype.setStatus = function(menuElement) {
                  return this.info.model.setStatus(util.dummyCB, menuElement.state);
                };
                return InfoView;
              })(View);
              return (function __10(_) {
                function Reference(_, id) {
                  var __this = this;
                  var __frame = {
                    name: "Reference",
                    line: 878
                  };
                  return __func(_, this, arguments, Reference, 0, __frame, function __$Reference() {
                    __this.id = id;
                    return store.getInfo(__cb(_, __frame, 2, 18, function ___(__0, __1) {
                      __this.info = __1;
                      __this.hover = ko.observable(false);
                      __this.type = __this.info.model.type;
                      __this.viewname = info2viewname(__this.info.model);
                      return __this.init(__cb(_, __frame, 6, 6, _, true));
                    }, true), __this.id);
                  });
                };
                return _(null, Reference);
              })(__cb(_, __frame, 888, 14, function ___(__0, __15) {
                Reference = __15;
                references = {
                };
                NoteView = (function(_super) {
                  __extends(NoteView, _super);
                  function NoteView() {
                    _ref2 = NoteView.__super__.constructor.apply(this, arguments);
                    return _ref2;
                  };
                  NoteView.registerView(/^note\/(.*)$/, NoteView, function __1(_, match) {
                    var __frame = {
                      name: "__1",
                      line: 901
                    };
                    return __func(_, this, arguments, __1, 0, __frame, function __$__1() {
                      return model.cache.getInformation(__cb(_, __frame, 1, 25, function ___(__0, __2) {
                        var __1 = ("Note: " + (__2.content));
                        return _(null, __1);
                      }, true), match[1]);
                    });
                  });
                  NoteView.prototype.init = function NoteView_prototype_init__2(_) {
                    var timeout, _this, __this = this;
                    var __frame = {
                      name: "NoteView_prototype_init__2",
                      line: 905
                    };
                    return __func(_, this, arguments, NoteView_prototype_init__2, 0, __frame, function __$NoteView_prototype_init__2() {
                      _this = __this;
                      __this.title = ko.computed(function() {
                        return ("Note: " + (truncate(_this.info.content())));
                      });
                      __this.icon = "file-alt";
                      __this.content = ko.observable(__this.info.content());
                      timeout = null;
                      __this.content.subscribe(function() {
                        if ((timeout != null)) {
                          clearTimeout(timeout);
                        }
                      ;
                        return timeout = setTimeout((function() {
                          if (_this.dirty()) {
                            return _this.saveContent();
                          }
                        ;
                        }), 2000);
                      });
                      __this.info.content.subscribe(function(content) {
                        return _this.content(content);
                      });
                      return _(null, __this.dirty = ko.computed(function() {
                        return !((_this.content() === _this.info.content()));
                      }));
                    });
                  };
                  NoteView.prototype.saveContent = function() {
                    var _this = this;
                    return (function __1(_) {
                      var save;
                      var __frame = {
                        name: "__1",
                        line: 936
                      };
                      return __func(_, this, arguments, __1, 0, __frame, function __$__1() {
                        save = win.showMessage("Saving …");
                        return _this.info.model.setContent(__cb(_, __frame, 4, 8, function __$__1() {
                          return setTimeout(__cb(_, __frame, 5, 8, function __$__1() {
                            return _(null, save("Save successful!"));
                          }, true), 1000);
                        }, true), _this.content());
                      });
                    })(util.dummyCB);
                  };
                  return NoteView;
                })(InfoView);
                references.note = (function(_super) {
                  __extends(note, _super);
                  function note() {
                    _ref3 = note.__super__.constructor.apply(this, arguments);
                    return _ref3;
                  };
                  note.prototype.init = NoteView.prototype.init;
                  note.prototype.saveContent = NoteView.prototype.saveContent;
                  return note;
                })(Reference);
                AsapView = (function(_super) {
                  __extends(AsapView, _super);
                  function AsapView() {
                    _ref4 = AsapView.__super__.constructor.apply(this, arguments);
                    return _ref4;
                  };
                  AsapView.registerView(/^asap\/(.*)$/, AsapView, function __1(_, match) {
                    var __frame = {
                      name: "__1",
                      line: 1182
                    };
                    return __func(_, this, arguments, __1, 0, __frame, function __$__1() {
                      return model.cache.getInformation(__cb(_, __frame, 1, 25, function ___(__0, __2) {
                        var __1 = ("ToDo: " + (__2.description));
                        return _(null, __1);
                      }, true), match[1]);
                    });
                  });
                  AsapView.prototype.init = function AsapView_prototype_init__2(_) {
                    var __this = this;
                    var __frame = {
                      name: "AsapView_prototype_init__2",
                      line: 1186
                    };
                    return __func(_, this, arguments, AsapView_prototype_init__2, 0, __frame, function __$AsapView_prototype_init__2() {
                      return _(null, __this.title = __this.info.description);
                    });
                  };
                  return AsapView;
                })(InfoView);
                MainView = (function(_super) {
                  __extends(MainView, _super);
                  MainView.registerView(/^$/, MainView, function __1(_) {
                    var __frame = {
                      name: "__1",
                      line: 1237
                    };
                    return __func(_, this, arguments, __1, 0, __frame, function __$__1() {
                      return _(null, "&#xf040;");
                    });
                  });
                  function MainView(_, slot) {
                    var __this = this;
                    var __frame = {
                      name: "MainView",
                      line: 1241
                    };
                    return __func(_, this, arguments, MainView, 0, __frame, function __$MainView() {
                      __this.slot = slot;
                      __this.title = "Secretarius";
                      __this.template = "main";
                      __this.icon = "pencil";
                      _();
                    });
                  };
                  MainView.prototype["delete"] = function() {
                  
                  };
                  return MainView;
                })(View);
                return __construct(WindowSlot, 0)(__cb(_, __frame, NaN, NaN, function ___(__0, __16) {
                  win = __16;
                  if (View.test(document.location.hash.slice(1))) {
                    win.setView(document.location.hash.slice(1));
                  }
                   else {
                    win.setView("");
                  }
                ;
                  ko.bindingHandlers.drop = {
                    init: function(element, valueAccessor) {
                      var $element;
                      $element = $(element);
                      $element.bind("dragover", function(ev) {
                        return ev.originalEvent.preventDefault();
                      });
                      return $element.bind("drop", function(ev) {
                        ev.originalEvent.preventDefault();
                        return valueAccessor()(ev.originalEvent.dataTransfer.getData("text/plain"));
                      });
                    }
                  };
                  ko.bindingHandlers.emitter = {
                    init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
                      return ko.bindingHandlers.drag.init(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext);
                    },
                    update: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
                      return ko.bindingHandlers.attr.update(element, (function() {
                        return {
                          href: ("#" + (ko.utils.unwrapObservable(valueAccessor())))
                        };
                      }), allBindingsAccessor, viewModel, bindingContext);
                    }
                  };
                  ko.bindingHandlers.mouse = {
                    init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
                      return ko.bindingHandlers.event.init(element, (function() {
                        var timeout, to;
                        if (((to = allBindingsAccessor().mouseTimeout) != null)) {
                          timeout = null;
                          return {
                            mouseenter: function() {
                              if ((timeout != null)) {
                                clearTimeout(timeout);
                              }
                            ;
                              return valueAccessor()(true);
                            },
                            mouseleave: function() {
                              if ((timeout != null)) {
                                clearTimeout(timeout);
                              }
                            ;
                              return timeout = setTimeout((function() {
                                return valueAccessor()(false);
                              }), to);
                            }
                          };
                        }
                         else {
                          return {
                            mouseenter: function() {
                              return valueAccessor()(true);
                            },
                            mouseleave: function() {
                              return valueAccessor()(false);
                            }
                          };
                        }
                      ;
                      }), allBindingsAccessor, viewModel, bindingContext);
                    }
                  };
                  ko.bindingHandlers.drag = {
                    init: function(element, valueAccessor) {
                      var $element, _this = this;
                      $element = $(element);
                      $element.attr("draggable", "true");
                      return $element.bind("dragstart", function(ev) {
                        ev.originalEvent.dataTransfer.setData("text/plain", ko.utils.unwrapObservable(valueAccessor()));
                        return ev.originalEvent.dataTransfer.setData("text/uri-list", ((("" + window.location.origin) + "/#") + (ko.utils.unwrapObservable(valueAccessor()))));
                      });
                    }
                  };
                  ko.bindingHandlers.fadeVisible = {
                    init: function(element, valueAccessor) {
                      var value;
                      value = valueAccessor();
                      return $(element).toggle(ko.utils.unwrapObservable(value));
                    },
                    update: function(element, valueAccessor) {
                      var value;
                      value = valueAccessor();
                      if (ko.utils.unwrapObservable(value)) {
                        return $(element).fadeIn();
                      }
                       else {
                        return $(element).fadeOut();
                      }
                    ;
                    }
                  };
                  ko.bindingHandlers.autosize = {
                    init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
                      $(element).autosize();
                      setTimeout((function() {
                        return $(element).trigger("autosize");
                      }), 0);
                      allBindingsAccessor().valueUpdate = "afterkeydown";
                      return ko.bindingHandlers.value.init(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext);
                    },
                    update: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
                      setTimeout((function() {
                        return $(element).trigger("autosize");
                      }), 0);
                      return ko.bindingHandlers.value.update(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext);
                    }
                  };
                  ko.bindingHandlers.slidingList = {
                    makeValueAccessor: function(valueAccessor) {
                      return function() {
                        return {
                          data: valueAccessor(),
                          beforeRemove: function(elem) {
                            if ((elem.nodeType === 1)) {
                              return $(elem).slideUp(500, function() {
                                return $(elem).remove();
                              });
                            }
                          ;
                          },
                          afterAdd: function(elem) {
                            if ((elem.nodeType === 1)) {
                              return $(elem).hide().slideDown(500);
                            }
                          ;
                          }
                        };
                      };
                    },
                    init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
                      return ko.bindingHandlers.foreach.init(element, ko.bindingHandlers.slidingList.makeValueAccessor(valueAccessor));
                    },
                    update: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
                      return ko.bindingHandlers.foreach.update(element, ko.bindingHandlers.slidingList.makeValueAccessor(valueAccessor), allBindingsAccessor, viewModel, bindingContext);
                    }
                  };
                  $(document).on("click", "a[href=\"\"]", function() {
                    return false;
                  });
                  $(document).on("click", "a[href^=\"#\"]", function() {
                    SlotGenerator.getDefault().show($(this).attr("href").slice(1));
                    return false;
                  });
                  setInterval((function() {
                    return $("time").html(function() {
                      return win.relTime($(this).attr("datetime"));
                    });
                  }), 1000);
                  $(function() {
                    return ko.applyBindings(win, document.documentElement);
                  });
                  win.showMessage("Welcome to Secretarius!", 10000);
                  _();
                }, true));
              }, true));
            }, true));
          }, true));
        }, true));
      }, true));
    })(__cb(_, __frame, 1425, 0, _, true));
  });
}).call(this, __trap);