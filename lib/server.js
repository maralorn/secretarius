// Generated by IcedCoffeeScript 1.4.0a
(function() {

  module.exports = function(model) {
    var app, express, http, json, sse;
    http = require('http');
    require('systemd');
    express = require('express');
    json = require('./jsoninterface');
    sse = require('./sse');
    app = express();
    app.use(function(req, res, next) {
      var i, _i, _len, _ref;
      _ref = req.accepted;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        i = _ref[_i];
        switch (i.subtype) {
          case 'json':
            req.url = "/json" + req.url;
            break;
          case 'html':
            req.url = '/index.html';
        }
      }
      return next();
    });
    app.use(express.compress());
    app.use(express["static"]("" + __dirname + "/client"));
    app.use(express.cookieParser());
    app.use(express.cookieSession({
      secret: "secret-" + (Math.random())
    }));
    app.use(express.bodyParser());
    app.use(app.router);
    json(app, model);
    sse(app, model);
    app.use(function(req, res) {
      var obj, _default;
      obj = {
        error: 404,
        msg: 'not found'
      };
      _default = function() {
        return res.send(404, JSON.stringify(obj));
      };
      return res.format({
        _default: _default,
        "default": _default,
        json: function() {
          return res.json(404, obj);
        },
        html: function() {
          return res.send(404, '<html><body><h1>404 - Not Found</h1></body></html>');
        }
      });
    });
    return http.createServer(app).listen(process.env.LISTEN_PID > 0 ? 'systemd' : 3000);
  };

}).call(this);
