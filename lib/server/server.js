/*** Generated by streamline 0.4.7 (fibers) - DO NOT EDIT ***/(function() {
  var app, argv, connectionString, express, http, json, model, path, sse, util;

  argv = require('optimist').boolean('debug').alias('d', 'debug')["default"]('debug', true).argv;

  util = require('libsecretarius').util;

  if (argv.debug) {
    util.enableDebugMode();
  }

  http = require('http');

  path = require('path');

  express = require('express');

  json = require('./jsoninterface');

  sse = require('./sse');

  connectionString = "pg://localhost:5432/" + process.env.USER + "-secretarius";

  model = require('./model')(connectionString);

  app = express();

  app.use(function(req, res, next) {
    var i, _i, _len, _ref;

    _ref = req.accepted;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      i = _ref[_i];
      switch (i.subtype) {
        case 'json':
          req.url = "/json" + req.url;
          break;
        case 'html':
          req.url = '/index.html';
      }
    }
    return next();
  });

  app.use(express.compress());

  app.use(express["static"](path.normalize("" + __dirname + "/../client")));

  app.use(express.bodyParser());

  app.use(app.router);

  app.get('/require', function(req, res) {
    return dispatcher(null, req, res);
  });

  json(app, model);

  sse(app, model);

  app.use(function(req, res) {
    var obj, _default;

    obj = {
      error: 404,
      msg: 'not found'
    };
    _default = function() {
      return res.send(404, JSON.stringify(obj));
    };
    return res.format({
      _default: _default,
      "default": _default,
      json: function() {
        return res.json(404, obj);
      },
      html: function() {
        return res.send(404, '<html><body><h1>404 - Not Found</h1></body></html>');
      }
    });
  });

  http.createServer(app).listen(3001);

}).call(this);
