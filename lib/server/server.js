/*** Generated by streamline 0.4.6 (callbacks) - DO NOT EDIT ***/ var __rt=require('streamline/lib/callbacks/runtime').runtime(__filename); (function() {
  var app, argv, connectionString, express, http, json, model, sse;

  argv = require("optimist").boolean("debug").alias("d", "debug")["default"]("debug", true).argv;

  if (argv.debug) {
    require("libsecretarius").util.enableDebugMode(); };


  http = require("http");

  express = require("express");

  json = require("./jsoninterface");

  sse = require("./sse");

  connectionString = (("pg://localhost:5432/" + process.env.USER) + "-secretarius");

  model = require("./model")(connectionString);

  app = express();

  app.use(function(req, res, next) {
    var i, _i, _len, _ref;
    _ref = req.accepted;
    for (_i = 0, _len = _ref.length; (_i < _len); _i++) {
      i = _ref[_i];
      switch (i.subtype) {
      case "json": req.url = ("/json" + req.url);
        break;
      case "html":
        req.url = "/index.html";
      }; };


    return next(); });


  app.use(express.compress());

  app.use(express["static"]((("" + __dirname) + "/client")));

  app.use(express.cookieParser());

  app.use(express.cookieSession({
    secret: ("secret-" + (Math.random())) }));


  app.use(express.bodyParser());

  app.use(app.router);

  json(app, model);

  sse(app, model);

  app.use(function(req, res) {
    var obj, _default;
    obj = {
      error: 404,
      msg: "not found" };

    _default = function() {
      return res.send(404, JSON.stringify(obj)); };

    return res.format({
      _default: _default,
      default: _default,
      json: function() {
        return res.json(404, obj); },

      html: function() {
        return res.send(404, "<html><body><h1>404 - Not Found</h1></body></html>"); } }); });




  http.createServer(app).listen(3000);

}).call(this);